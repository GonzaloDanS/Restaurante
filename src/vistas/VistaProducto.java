/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.*;
import javax.swing.table.DefaultTableModel;
import entidades.*;
import accesoADatos.*;
import java.awt.*;
import java.sql.Array;
import javax.swing.*;

/**
 *
 * @author gon_k
 */
public class VistaProducto extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            if (c != 0 && c != 4) {
                return true;
            } else {
                return false;
            }
        }
    };
    private ProductoData pd = null;
    FondoPanel fondo = new FondoPanel();

    public VistaProducto() {
        this.setContentPane(fondo);
        initComponents();
        armarCabecera();
        jbEliminar.setEnabled(false);
        pd = new ProductoData();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new FondoPanel();
        jlTitulo = new javax.swing.JLabel();
        jtfBuscar = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        jbNuevo = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setClosable(true);

        jlTitulo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jlTitulo.setText("Productos");

        jtfBuscar.setForeground(new java.awt.Color(102, 102, 102));
        jtfBuscar.setText("Ingrese el c√≥digo del producto.");
        jtfBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfBuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscarFocusLost(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtProductos.setAutoCreateRowSorter(true);
        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtProductos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtProductosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtProductosFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jtProductos);
        jtProductos.getAccessibleContext().setAccessibleName("");
        jtProductos.getAccessibleContext().setAccessibleDescription("");

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Salir");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbNuevo)
                                .addGap(50, 50, 50)
                                .addComponent(jbModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbEliminar)
                                .addGap(46, 46, 46)
                                .addComponent(jbCancelar)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlTitulo, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jbBuscar, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(201, 201, 201))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jlTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jbBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbModificar)
                    .addComponent(jbEliminar)
                    .addComponent(jbCancelar))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "¬øDesea salir de la vista de productos?", "Salir", JOptionPane.YES_NO_OPTION);
        if (res == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int f = jtProductos.getSelectedRow();
        int res = JOptionPane.showConfirmDialog(this, "¬øDesea eliminar los productos seleccionados?", "Eliminar producto", JOptionPane.YES_NO_OPTION);
        if (res == JOptionPane.YES_OPTION) {
            for (int i = 0; i < modelo.getRowCount(); i++) {
                if (jtProductos.isCellSelected(i, 0)) {
                    pd.eliminarProducto(Integer.parseInt(modelo.getValueAt(i, 0).toString()));
                }
            }
            cargarTabla();
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "¬øDesea modificar los productos?", "Modificar producto", JOptionPane.YES_NO_OPTION);
        try {
            if (res == JOptionPane.YES_OPTION) {
                for (int i = 0; i < modelo.getRowCount(); i++) {
                    boolean x;
                    if (Integer.parseInt(modelo.getValueAt(i, 4).toString()) == 1) {
                        x = true;
                    } else {
                        x = false;
                    }
                    Producto p = new Producto(Integer.parseInt(modelo.getValueAt(i, 0).toString()), modelo.getValueAt(i, 1).toString(), Double.parseDouble(modelo.getValueAt(i, 2).toString()), Integer.parseInt(modelo.getValueAt(i, 3).toString()), x);
                    pd.modificarProducto(p);
                }
                cargarTabla();
                JOptionPane.showMessageDialog(this, "Modificado exit√≥samente.", "Modificaci√≥n completa.", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "La modificaci√≥n se ha cancelado.", "Modificaci√≥n cancelada.", JOptionPane.PLAIN_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error. Formato no admitido. | " + e.getLocalizedMessage(), "Formato err√≥neo.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        jDesktopPane1.repaint();
        VistaCrearProducto vcp = new VistaCrearProducto();
        vcp.setVisible(true);
        jDesktopPane1.add(vcp);
        jDesktopPane1.moveToFront(vcp);
        cargarTabla();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jtfBuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarFocusGained
        jtfBuscar.setText("");
    }//GEN-LAST:event_jtfBuscarFocusGained

    private void jtfBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarFocusLost
        if (!jtfBuscar.getText().equals("Ingrese el c√≥digo del producto.") && jtfBuscar.getText().isEmpty()) {
            jtfBuscar.setText("Ingrese el c√≥digo del producto.");
        }
    }//GEN-LAST:event_jtfBuscarFocusLost

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        try {
            if (jtfBuscar.getText().equals("Ingrese el c√≥digo del producto.") || jtfBuscar.getText().isEmpty()) {
                cargarTabla();
                JOptionPane.showMessageDialog(this, "El campo no puede estar vac√≠o.", "Campo vac√≠o.", JOptionPane.WARNING_MESSAGE);
            } else {
                int id = Integer.parseInt(jtfBuscar.getText());
                Producto p = pd.buscarProducto(id);
                int e;
                if (p != null) {
                    if (p.isEstado()) {
                        e = 1;
                    } else {
                        e = 0;
                    }
                    borrarFilas();
                    modelo.addRow(new Object[]{p.getIdProd(), p.getNom(), p.getPrecio(), p.getStock(), e});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error. √önicamente debe ingresar d√≠gitos. | " + e.getLocalizedMessage(), "Formato err√≥neo.", JOptionPane.ERROR_MESSAGE);
            cargarTabla();
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jtProductosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtProductosFocusGained
        jbEliminar.setEnabled(true);
    }//GEN-LAST:event_jtProductosFocusGained

    private void jtProductosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtProductosFocusLost
//        jbEliminar.setEnabled(false);
    }//GEN-LAST:event_jtProductosFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JTable jtProductos;
    private javax.swing.JTextField jtfBuscar;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        modelo.addColumn("Estado");
        jtProductos.setModel(modelo);
    }

    private void borrarFilas() {
        int filas = jtProductos.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    public void cargarTabla() {
        borrarFilas();
        ArrayList<Producto> lista = new ArrayList<>();
        lista = pd.listarProductosTODO();
        for (Producto producto : lista) {
            int e;
            if (producto.isEstado()) {
                e = 1;
            } else {
                e = 0;
            }
            modelo.addRow(new Object[]{producto.getIdProd(), producto.getNom(), producto.getPrecio(), producto.getStock(), e});
        }
    }

//    private void actualizar() {
//        borrarFilas();
//        Alumno al = (Alumno) jcbAlumno.getSelectedItem();
//        ArrayList<Materia> mats = new ArrayList<>();
//        if (jrbInscripto.isSelected()) {
//            jbInscribir.setEnabled(false);
//            jbAnular.setEnabled(true);
//            mats = (ArrayList<Materia>) ins.obtenerMateriasCursadas(al.getIdAlumno());
//        } else if (jrbNoInscripto.isSelected()) {
//            jbAnular.setEnabled(false);
//            jbInscribir.setEnabled(true);
//            mats = (ArrayList<Materia>) ins.obtenerMateriasNOCursadas(al.getIdAlumno());
//        }
//        for (Materia mat : mats) {
//            modelo.addRow(new Object[]{mat.getIdMateria(), mat.getNombre(), mat.getAnioMateria()});
//        }
//    }
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/Imagenes/Fondo2.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
